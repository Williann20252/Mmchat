import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-app.js"; import { getDatabase, ref, set, push, onChildAdded, onValue, remove, update } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-database.js";

// ‚Äî Configura√ß√£o Firebase const firebaseConfig = { apiKey: "AIzaSyB3ntpJNvKrUBmoH96NjpdB0aPyDVXACWg", authDomain: "mmchat-f4f88.firebaseapp.com", databaseURL: "https://mmchat-f4f88-default-rtdb.firebaseio.com", projectId: "mmchat-f4f88", storageBucket: "mmchat-f4f88.appspot.com", messagingSenderId: "404598754438", appId: "1:404598754438:web:6a0892895591430d851507" }; const app = initializeApp(firebaseConfig); const db  = getDatabase(app);

// ‚Äî Identidade do usu√°rio const nickname = localStorage.getItem("nickname") || "An√¥nimo"; let uid = localStorage.getItem("uid"); if (!uid) { uid = "user_" + Math.random().toString(36).substring(2, 10); localStorage.setItem("uid", uid); }

// ‚Äî Registro de presen√ßa const userRef = ref(db, onlineUsers/${uid}); set(userRef, nickname); window.addEventListener("beforeunload", () => remove(userRef));

// ‚Äî Refer√™ncias ao DOM const mural              = document.getElementById("chat-mural"); const input              = document.getElementById("mensagemInput"); const enviarBtn          = document.getElementById("enviarBtn"); const modeSelect         = document.getElementById("modeSelect"); const mentionUserSelect  = document.getElementById("mentionUserSelect"); const usuariosBtn        = document.getElementById("usuariosBtn"); const configBtn          = document.getElementById("configBtn"); const listaUsuarios      = document.getElementById("listaUsuarios"); const logoutBtn          = document.getElementById("logoutBtn"); const imgBtn             = document.getElementById("imgBtn"); const audioBtn           = document.getElementById("audioBtn"); const uploadAudioBtn     = document.getElementById("uploadAudioBtn"); const painelUsuarios     = document.getElementById("usuariosOnline"); const painelConfig       = document.getElementById("configPainel"); const fecharUsuarios     = document.getElementById("fecharUsuarios"); const fecharConfig       = document.getElementById("fecharConfig");

// ‚Äî Controla visibilidade do select de usu√°rios para Moita modeSelect.addEventListener("change", () => { if (modeSelect.value === "moita") { mentionUserSelect.hidden = false; } else { mentionUserSelect.hidden = true; // limpar mural e re-render p√∫blico (opcional) } });

// ‚Äî Atualiza lista de usu√°rios online e op√ß√µes de Moita onValue(ref(db, "onlineUsers"), snapshot => { listaUsuarios.innerHTML = ""; mentionUserSelect.innerHTML = '<option value="" disabled selected>Selecione usu√°rio</option>'; const data = snapshot.val() || {}; Object.entries(data).forEach(([key, name]) => { // Painel usu√°rios const li = document.createElement("li"); li.textContent = name; if (key !== uid) { // convite PV const inviteBtn = document.createElement("button"); inviteBtn.textContent = 'üåø'; inviteBtn.title = 'Convidar para moita'; inviteBtn.onclick = () => requestMoita(key, name); // bloquear const blockBtn = document.createElement("button"); blockBtn.textContent = 'üö´'; blockBtn.title = 'Bloquear usu√°rio'; // aqui bloquear l√≥gica... li.appendChild(inviteBtn); li.appendChild(blockBtn); // op√ß√£o Moita const opt = document.createElement("option"); opt.value = key; opt.textContent = name; mentionUserSelect.appendChild(opt); } listaUsuarios.appendChild(li); }); });

// ‚Äî Solicitar conversas reservadas (Moita) function requestMoita(destUid, destNick) { push(ref(db, "pvSolicitacoes"), { deUid: uid, deNick: nickname, paraUid: destUid, paraNick: destNick, status: "pendente" }); }

// ‚Äî Aceita/recusa PV (Moita) existente onChildAdded(ref(db, "pvSolicitacoes"), snap => { const s = snap.val(); if (s.paraUid === uid && s.status === "pendente") { const tpl = document.getElementById("pvInviteTemplate"); const clone = document.importNode(tpl.content, true); clone.querySelector('.invite-from').textContent = s.deNick; // Aceitar clone.querySelector('.acceptPv').onclick = () => update(ref(db, pvSolicitacoes/${snap.key}), { status: 'aceito' }); // Recusar clone.querySelector('.rejectPv').onclick = () => update(ref(db, pvSolicitacoes/${snap.key}), { status: 'recusado' }); mural.appendChild(clone); } });

enviarBtn.onclick = enviarMensagem; input.addEventListener("keydown", e => { if (e.key === "Enter") enviarMensagem(); });

// ‚Äî Envio de mensagem (Sala ou Moita) function enviarMensagem() { const texto = input.value.trim(); if (!texto) return; if (modeSelect.value === "moita") { const dest = mentionUserSelect.value; if (!dest) { alert("Selecione um usu√°rio para Moita."); return; } push(ref(db, "mensagens"), { nick: nickname, uid, tipo: "moita", privadoPara: dest, conteudo: texto, hora: Date.now() }); } else { push(ref(db, "mensagens"), { nick: nickname, uid, tipo: "texto", conteudo: texto, hora: Date.now() }); } input.value = ""; }

// ‚Äî Renderiza√ß√£o de mensagens com filtro de modo onChildAdded(ref(db, "mensagens"), snap => { const msg = snap.val(); // Filtrar conforme modo if (modeSelect.value === "moita") { if (msg.tipo !== "moita") return; if (msg.uid !== uid && msg.privadoPara !== uid) return; } else { if (msg.tipo === "moita") return; } // Monta a mensagem const div = document.createElement("div"); const nickSpan = document.createElement("span"); nickSpan.textContent = @${msg.nick}: ; nickSpan.style.fontWeight = "bold"; div.appendChild(nickSpan); if (msg.tipo === "texto" || msg.tipo === "moita") { div.appendChild(document.createTextNode(msg.conteudo)); } else if (msg.tipo === "img") { const btn = document.createElement("button"); btn.textContent = "Ver imagem"; const img = document.createElement("img"); img.src = msg.conteudo; img.style.maxWidth = "100%"; img.style.display = "none"; btn.onclick = () => { img.style.display = img.style.display === "none" ? "block" : "none"; btn.textContent = img.style.display === "none" ? "Ver imagem" : "Ocultar"; }; div.appendChild(btn); div.appendChild(img); } else if (msg.tipo === "audio") { const audio = document.createElement("audio"); audio.src = msg.conteudo; audio.controls = true; div.appendChild(audio); } mural.appendChild(div); // Auto-scroll if (document.getElementById("rolagemAuto")?.checked ?? true) { mural.scrollTop = mural.scrollHeight; } });

// ‚Äî Imagem imgBtn.onclick = () => { const fi = document.createElement("input"); fi.type="file"; fi.accept="image/*"; fi.onchange = ()=>{ const r = new FileReader(); r.onload = ()=> push(ref(db,"mensagens"),{ nick: nickname, uid, tipo:"img", conteudo:r.result, hora:Date.now() }); r.readAsDataURL(fi.files[0]); }; fi.click(); };

// ‚Äî √Åudio inline (est√°vel) audioBtn.onclick = async()=>{ const stream = await navigator.mediaDevices.getUserMedia({audio:true}); const rec    = new MediaRecorder(stream); const chunks=[]; rec.ondataavailable = e=>chunks.push(e.data); rec.onstop = ()=>{ const blob = new Blob(chunks,{type:"audio/webm"}); const r    = new FileReader(); r.onloadend = ()=> push(ref(db,"mensagens"),{ nick:nickname, uid, tipo:"audio", conteudo:r.result, hora:Date.now() }); r.readAsDataURL(blob); }; rec.start(); setTimeout(()=>rec.stop(),60000); };

// ‚Äî Upload de √°udio existente uploadAudioBtn.onclick = () => { const fi = document.createElement("input"); fi.type="file"; fi.accept="audio/*"; fi.onchange = ()=>{ const r = new FileReader(); r.onload = ()=> push(ref(db,"mensagens"),{ nick:nickname, uid, tipo:"audio", conteudo:r.result, hora:Date.now() }); r.readAsDataURL(fi.files[0]); }; fi.click(); };

// ‚Äî Toggle pain√©is// ‚Äî Toggle pain√©is\usuariosBtn.onclick    = () => painelUsuarios.classList.toggle("show"); fecharUsuarios.onclick = () => painelUsuarios.classList.remove("show"); configBtn.onclick      = () => painelConfig.classList.toggle("show"); fecharConfig.onclick   = () => painelConfig.classList.remove("show");

// ‚Äî Logout\logoutBtn.onclick      = () => { remove(userRef); localStorage.clear(); window.location.href = "../index.html"; };

